# Generated by Django 4.1.6 on 2023-02-08 19:19

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Allergens',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allergen', models.CharField(blank=True, choices=[('DR', 'Dairy'), ('GL', 'Gluten'), ('EG', 'Eggs'), ('FS', 'Fish'), ('CS', 'Crustacean shellfish'), ('TN', 'Tree nuts'), ('PN', 'Peanuts'), ('WH', 'Wheat'), ('SB', 'Soybeans')], help_text='Enter the allergen', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Logins',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='Enter an email', max_length=254)),
                ('first_name', models.CharField(help_text='Enter first name', max_length=50)),
                ('last_name', models.CharField(help_text='Enter surname', max_length=50)),
                ('username', models.CharField(help_text='Enter a username', max_length=15)),
                ('password', models.CharField(help_text='Enter a password', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Dishes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Enter the item's name", max_length=100)),
                ('description', models.CharField(help_text='Write a description of the item', max_length=500)),
                ('kcal', models.IntegerField(help_text='Enter the calories of this item')),
                ('course', models.CharField(help_text='What course this item is for', max_length=25)),
                ('price', models.FloatField(help_text='How much does this item cost?')),
                ('vegetarian', models.BooleanField(choices=[('Y', 'Yes'), ('N', 'No')], help_text='Is this item vegetarian?')),
                ('vegan', models.BooleanField(choices=[('Y', 'Yes'), ('N', 'No')], help_text='Is this item vegan?')),
                ('available', models.BooleanField(choices=[('Y', 'Yes'), ('N', 'No')], help_text='Is this item in stock')),
                ('allergens', models.ManyToManyField(blank=True, to='menu.allergens')),
            ],
        ),
    ]
